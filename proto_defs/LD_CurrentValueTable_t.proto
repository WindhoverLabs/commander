/* This file was autogenerated from proto template version 0.0.0.1 and autogenerator version 0.0.0.1 */

syntax = "proto2";

message PX4_AirspeedMsg_t_pb
{
	required float TrueAirspeed = 1;
	required float Confidence = 2;
	required float AirTemperature = 3;
	required uint64 Timestamp = 4;
	repeated uint32 TlmHeader = 5;
	required float IndicatedAirspeed = 6;
	required float TrueAirspeedUnfiltered = 7;
}


message PX4_ManualControlSetpointMsg_t_pb
{
	required uint32 ModeSlot = 1;
	required uint64 Timestamp = 2;
	required uint32 KillSwitch = 3;
	required uint32 ArmSwitch = 4;
	repeated uint32 TlmHeader = 5;
	required uint32 ManSwitch = 6;
	required uint32 ModeSwitch = 7;
	required uint32 LoiterSwitch = 8;
	required uint32 ReturnSwitch = 9;
	required uint32 RattitudeSwitch = 10;
	required uint32 PosctlSwitch = 11;
	required uint32 TransitionSwitch = 12;
	required uint32 AcroSwitch = 13;
	required float Flaps = 14;
	required float Y = 15;
	required float X = 16;
	required float Z = 17;
	required uint32 OffboardSwitch = 18;
	required uint32 GearSwitch = 19;
	required uint32 StabSwitch = 20;
	required float R = 21;
	required uint32 DataSource = 22;
	required float Aux2 = 23;
	required float Aux3 = 24;
	required float Aux1 = 25;
	required float Aux4 = 26;
	required float Aux5 = 27;
}


message PX4_VehicleAttitudeMsg_t_pb
{
	required float PitchSpeed = 1;
	required float RollSpeed = 2;
	repeated float Q = 3;
	repeated uint32 TlmHeader = 4;
	required uint64 Timestamp = 5;
	required float YawSpeed = 6;
}


message PX4_VehicleControlModeMsg_t_pb
{
	required bool ExternalManualOverrideOk = 1;
	required bool ControlAltitudeEnabled = 2;
	required bool ControlAutoEnabled = 3;
	required bool ControlFixedHdgEnabled = 4;
	required bool ControlAccelerationEnabled = 5;
	required bool SystemHilEnabled = 6;
	required bool ControlRatesEnabled = 7;
	required bool ControlVelocityEnabled = 8;
	required bool ControlTerminationEnabled = 9;
	repeated uint32 TlmHeader = 10;
	required bool ControlClimbRateEnabled = 11;
	required uint64 Timestamp = 12;
	required bool ControlRattitudeEnabled = 13;
	required bool ControlForceEnabled = 14;
	required bool ControlAttitudeEnabled = 15;
	required bool ControlOffboardEnabled = 16;
	required bool ControlManualEnabled = 17;
	required bool Armed = 18;
	required bool ControlPositionEnabled = 19;
}


message PX4_ActuatorArmedMsg_t_pb
{
	required bool ForceFailsafe = 1;
	required bool ReadyToArm = 2;
	required uint64 Timestamp = 3;
	required bool InEscCalibrationMode = 4;
	repeated uint32 TlmHeader = 5;
	required bool Lockdown = 6;
	required bool Prearmed = 7;
	required bool Armed = 8;
	required bool ManualLockdown = 9;
}


message PX4_ControlStateMsg_t_pb
{
	repeated float VelVariance = 1;
	required float Airspeed = 2;
	required float PosZ = 3;
	required float PosX = 4;
	required float PosY = 5;
	repeated float DeltaQReset = 6;
	repeated float PosVariance = 7;
	required uint64 Timestamp = 8;
	required float RollRateBias = 9;
	repeated uint32 TlmHeader = 10;
	required float PitchRateBias = 11;
	required float VelX = 12;
	repeated float Q = 13;
	required float AccY = 14;
	required float AccX = 15;
	required float VelY = 16;
	required float AccZ = 17;
	required float YawRate = 18;
	required uint32 QuatResetCounter = 19;
	required float RollRate = 20;
	required bool AirspeedValid = 21;
	required float PitchRate = 22;
	required float HorzAccMag = 23;
	required float YawRateBias = 24;
	required float VelZ = 25;
}


message PX4_ActuatorControlsMsg_t_pb
{
	repeated float Control = 1;
	required uint64 Timestamp = 2;
	repeated uint32 TlmHeader = 3;
	required uint64 SampleTime = 4;
}


message PX4_BatteryStatusMsg_t_pb
{
	required float Scale = 1;
	required float VoltageFiltered = 2;
	required int32 CellCount = 3;
	required uint64 Timestamp = 4;
	required float CurrentFiltered = 5;
	required float Current = 6;
	required uint32 Warning = 7;
	required bool Connected = 8;
	required float Voltage = 9;
	repeated uint32 TlmHeader = 10;
	required float Remaining = 11;
	required float Discharged = 12;
}


message PX4_VehicleLocalPositionMsg_t_pb
{
	required double RefLat = 1;
	required uint64 RefTimestamp = 2;
	required uint32 XY_ResetCounter = 3;
	required float Yaw = 4;
	required float DistBottomRate = 5;
	required float AY = 6;
	required bool Z_Valid = 7;
	required float X = 8;
	required float VY = 9;
	required bool XY_Valid = 10;
	required float RefAlt = 11;
	required float Z = 12;
	required uint64 Timestamp = 13;
	required bool DistBottomValid = 14;
	required float DistBottom = 15;
	required bool XY_Global = 16;
	repeated uint32 TlmHeader = 17;
	required float Y = 18;
	required uint32 VXY_ResetCounter = 19;
	required float Delta_Z = 20;
	required uint32 Z_ResetCounter = 21;
	required bool V_XY_Valid = 22;
	required bool Z_Global = 23;
	required uint32 EstimatorType = 24;
	required float VX = 25;
	required float AX = 26;
	required float VZ = 27;
	required float AZ = 28;
	repeated float Delta_XY = 29;
	required float EvH = 30;
	required uint32 VZ_ResetCounter = 31;
	required float EpV = 32;
	required uint64 SurfaceBottomTimestamp = 33;
	repeated float Delta_VXY = 34;
	required float Delta_VZ = 35;
	required float EpH = 36;
	required bool V_Z_Valid = 37;
	required double RefLon = 38;
	required float EvV = 39;
}

message LD_CurrentValueTable_t_pb
{

	required PX4_VehicleLocalPositionMsg_t_pb VehicleLocalPositionMsg = 1;
	required PX4_VehicleAttitudeMsg_t_pb VehicleAttitudeMsg = 2;
	required PX4_ActuatorControlsMsg_t_pb ActuatorControls0Msg = 3;
	required PX4_ActuatorArmedMsg_t_pb ActuatorArmedMsg = 4;
	required PX4_BatteryStatusMsg_t_pb BatteryStatusMsg = 5;
	required PX4_AirspeedMsg_t_pb AirspeedMsg = 6;
	required PX4_ManualControlSetpointMsg_t_pb ManualControlSetpointMsg = 7;
	required PX4_VehicleControlModeMsg_t_pb VehicleControlModeMsg = 8;
	required PX4_ControlStateMsg_t_pb ControlStateMsg = 9;
}