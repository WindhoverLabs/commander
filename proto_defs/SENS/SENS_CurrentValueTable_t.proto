/* This file was autogenerated from proto template version 0.0.0.1 and autogenerator version 0.0.0.1 */

syntax = "proto2";
import "nanopb.proto";

message PX4_InputRcMsg_t_pb
{
	required uint32 RcTotalFrameCount = 1;
	required bool RcLost = 2;
	required uint32 ChannelCount = 3;
	required uint64 LastSignal = 4;
	required bool RcFailsafe = 5;
	required uint64 Timestamp = 6;
	required uint32 InputSource = 7;
	repeated uint32 TlmHeader = 8[(nanopb).max_count = 12];
	repeated uint32 Values = 9[(nanopb).max_count = 18];
	required uint32 RcPpmFrameLength = 10;
	required uint32 RcLostFrameCount = 11;
	required int32 RSSI = 12;
}

message PX4_SensorGyroMsg_t_pb
{
	required int32 TemperatureRaw = 1;
	required float ZIntegral = 2;
	required float XIntegral = 3;
	required uint64 IntegralDt = 4;
	required uint64 Timestamp = 5;
	required int32 ZRaw = 6;
	required int32 YRaw = 7;
	required float Scaling = 8;
	required float Range = 9;
	repeated uint32 TlmHeader = 10[(nanopb).max_count = 12];
	required float YIntegral = 11;
	required uint32 DeviceID = 12;
	required float Y = 13;
	required float X = 14;
	required float Z = 15;
	required uint64 ErrorCount = 16;
	required int32 XRaw = 17;
	required float Temperature = 18;
}

message PX4_VehicleControlModeMsg_t_pb
{
	required bool ExternalManualOverrideOk = 1;
	required bool ControlAltitudeEnabled = 2;
	required bool ControlAutoEnabled = 3;
	required bool ControlFixedHdgEnabled = 4;
	required bool ControlAccelerationEnabled = 5;
	required bool SystemHilEnabled = 6;
	required bool ControlRatesEnabled = 7;
	required bool ControlManualEnabled = 8;
	required bool ControlTerminationEnabled = 9;
	required bool ControlVelocityEnabled = 10;
	required bool ControlForceEnabled = 11;
	required uint64 Timestamp = 12;
	required bool ControlRattitudeEnabled = 13;
	required bool ControlClimbRateEnabled = 14;
	required bool ControlAttitudeEnabled = 15;
	required bool ControlOffboardEnabled = 16;
	required bool Armed = 17;
	repeated uint32 TlmHeader = 18[(nanopb).max_count = 12];
	required bool ControlPositionEnabled = 19;
}

message PX4_DifferentialPressureMsg_t_pb
{
	required float DifferentialPressureFiltered = 1;
	required float Temperature = 2;
	required uint64 Timestamp = 3;
	required uint64 ErrorCount = 4;
	required float DifferentialPressureRaw = 5;
	repeated uint32 TlmHeader = 6[(nanopb).max_count = 12];
}

message PX4_SensorAccelMsg_t_pb
{
	required int32 TemperatureRaw = 1;
	required float ZIntegral = 2;
	required float XIntegral = 3;
	required uint64 IntegralDt = 4;
	required uint64 Timestamp = 5;
	required float Range_m_s2 = 6;
	required int32 ZRaw = 7;
	required int32 YRaw = 8;
	required float Scaling = 9;
	repeated uint32 TlmHeader = 10[(nanopb).max_count = 12];
	required float YIntegral = 11;
	required uint32 DeviceID = 12;
	required float Y = 13;
	required float X = 14;
	required float Z = 15;
	required uint64 ErrorCount = 16;
	required int32 XRaw = 17;
	required float Temperature = 18;
}

message PX4_SensorMagMsg_t_pb
{
	required float Temperature = 1;
	required uint64 Timestamp = 2;
	required int32 ZRaw = 3;
	required int32 YRaw = 4;
	required float Scaling = 5;
	required float Range = 6;
	repeated uint32 TlmHeader = 7[(nanopb).max_count = 12];
	required uint32 DeviceID = 8;
	required float Y = 9;
	required float X = 10;
	required float Z = 11;
	required uint64 ErrorCount = 12;
	required int32 XRaw = 13;
}

message PX4_ActuatorControlsMsg_t_pb
{
	repeated float Control = 1[(nanopb).max_count = 8];
	required uint64 Timestamp = 2;
	required uint64 SampleTime = 3;
	repeated uint32 TlmHeader = 4[(nanopb).max_count = 12];
}

message PX4_SensorBaroMsg_t_pb
{
	required float Temperature = 1;
	required uint64 Timestamp = 2;
	required float Altitude = 3;
	required float Pressure = 4;
	repeated uint32 TlmHeader = 5[(nanopb).max_count = 12];
	required uint32 ErrorCount = 6;
}

message SENS_CurrentValueTable_t_pb
{ 
	required uint64 LastBaroTime = 1;
	required PX4_SensorMagMsg_t_pb SensorMagMsg = 2;
	required PX4_InputRcMsg_t_pb InputRcMsg = 3;
	required PX4_SensorGyroMsg_t_pb SensorGyroMsg = 4;
	required PX4_DifferentialPressureMsg_t_pb DifferentialPressureMsg = 5;
	required uint64 LastVehicleControlModeTime = 6;
	required PX4_ActuatorControlsMsg_t_pb ActuatorControls0Msg = 7;
	required uint64 LastDifferentialPressureTime = 8;
	required uint64 LastMagTime = 9;
	required uint64 LastActuatorControls0Time = 10;
	required uint64 LastGyroTime = 11;
	required uint64 LastAccelTime = 12;
	required PX4_VehicleControlModeMsg_t_pb VehicleControlModeMsg = 13;
	required PX4_SensorBaroMsg_t_pb SensorBaroMsg = 14;
	required uint64 LastInputRcTime = 15;
	required PX4_SensorAccelMsg_t_pb SensorAccelMsg = 16;
}