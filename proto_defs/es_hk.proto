/* This file was autogenerated from proto template version 0.0.0.1 and autogenerator version 0.0.0.1 */

syntax = "proto2";
import "nanopb.proto";

message es_hk_payload_pb
{
	repeated uint32 PerfTriggerMask = 1[(nanopb).max_count = 4];
	optional uint32 ResetSubtype = 2;
	optional uint32 ProcessorResets = 3;
	optional uint32 PerfMode = 4;
	optional uint32 CFEMinorVersion = 5;
	optional uint32 ErrCounter = 6;
	optional uint32 RegisteredLibs = 7;
	optional uint32 CFERevision = 8;
	optional uint32 RegisteredExternalApps = 9;
	optional uint32 RegisteredCoreApps = 10;
	optional uint32 HeapBytesFree = 11;
	optional uint32 SysLogSize = 12;
	repeated uint32 PerfFilterMask = 13[(nanopb).max_count = 4];
	optional uint32 OSALMissionRevision = 14;
	optional uint32 CFECoreChecksum = 15;
	optional uint32 PerfDataStart = 16;
	optional uint32 BootSource = 17;
	optional uint32 PerfTriggerCount = 18;
	optional uint32 PerfState = 19;
	optional uint32 OSALMajorVersion = 20;
	optional uint32 ERLogEntries = 21;
	optional uint32 SysLogBytesUsed = 22;
	optional uint32 CFEMissionRevision = 23;
	optional uint32 RegisteredTasks = 24;
	optional uint32 OSALMinorVersion = 25;
	optional uint32 CmdCounter = 26;
	optional uint32 HeapMaxBlockSize = 27;
	optional uint32 PerfDataEnd = 28;
	optional uint32 ERLogIndex = 29;
	optional uint32 PerfDataToWrite = 30;
	optional uint32 CFEMajorVersion = 31;
	optional uint32 SysLogEntries = 32;
	optional uint32 OSALRevision = 33;
	optional uint32 MaxProcessorResets = 34;
	optional uint32 HeapBlocksFree = 35;
	optional uint32 SysLogMode = 36;
	optional uint32 ResetType = 37;
	optional uint32 PerfDataCount = 38;
}

message es_hk_pb
{ 
	required es_hk_payload_pb Payload = 1;
}