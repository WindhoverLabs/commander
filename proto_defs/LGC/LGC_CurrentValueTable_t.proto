/* This file was autogenerated from proto template version 0.0.0.1 and autogenerator version 0.0.0.1 */

syntax = "proto2";
import "nanopb.proto";

message PX4_ManualControlSetpointMsg_t_pb
{
	required uint32 ModeSlot = 1;
	required uint64 Timestamp = 2;
	required uint32 KillSwitch = 3;
	required uint32 ArmSwitch = 4;
	repeated uint32 TlmHeader = 5[(nanopb).max_count = 12];
	required uint32 ManSwitch = 6;
	required uint32 ModeSwitch = 7;
	required uint32 LoiterSwitch = 8;
	required uint32 ReturnSwitch = 9;
	required uint32 RattitudeSwitch = 10;
	required uint32 PosctlSwitch = 11;
	required uint32 TransitionSwitch = 12;
	required uint32 AcroSwitch = 13;
	required float Flaps = 14;
	required float Y = 15;
	required float X = 16;
	required float Z = 17;
	required uint32 OffboardSwitch = 18;
	required uint32 GearSwitch = 19;
	required uint32 StabSwitch = 20;
	required float R = 21;
	required uint32 DataSource = 22;
	required float Aux2 = 23;
	required float Aux3 = 24;
	required float Aux1 = 25;
	required float Aux4 = 26;
	required float Aux5 = 27;
}

message PX4_VehicleStatusMsg_t_pb
{
	required uint32 HilState = 1;
	required bool Failsafe = 2;
	required bool MissionFailure = 3;
	required bool VtolFwPermanentStab = 4;
	required uint32 ArmingState = 5;
	required bool EngineFailureCmd = 6;
	required uint32 NavState = 7;
	required uint32 OnboardControlSensorsPresent = 8;
	required uint32 DataLinkLostCounter = 9;
	repeated uint32 TlmHeader = 10[(nanopb).max_count = 12];
	required uint32 SystemID = 11;
	required uint32 OnboardControlSensorsEnabled = 12;
	required bool EngineFailure = 13;
	required bool InTransitionMode = 14;
	required bool RcSignalLost = 15;
	required uint32 RcInputMode = 16;
	required bool IsRotaryWing = 17;
	required bool DataLinkLost = 18;
	required uint32 SystemType = 19;
	required uint64 Timestamp = 20;
	required uint32 OnboardControlSensorsHealth = 21;
	required uint32 ComponentID = 22;
	required bool IsVtol = 23;
}

message LGC_CurrentValueTable_t_pb
{ 
	required PX4_ManualControlSetpointMsg_t_pb m_ManualControlSetpointMsg = 1;
	required PX4_VehicleStatusMsg_t_pb m_VehicleStatusMsg = 2;
}